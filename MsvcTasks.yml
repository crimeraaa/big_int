version: '3'

vars:
  COMMON_FLAGS: >-
    -nologo -W4 -WX -std:c++17 -EHsc -permissive- -Zc:preprocessor -Zc:__cplusplus
  DEBUG_FLAGS: -Od -Zi -Fd:"{{.BIN}}/" -fsanitize=address -DDEBUG_USE_ASSERT
  RELEASE_FLAGS: -O1
  
tasks:
  default:
    cmds:
      - task: build

  build:
    desc: Builds the executable.
    deps:
      - task: :dirs
    vars:
      # Hack as long as `sources` is not supported in a variable and Windows CMD
      # cannot glob
      _SOURCES:
        sh: ls -1 '{{.SRC}}' | grep 'cpp' | awk '{print "{{.SRC}}/" $0}'
      IN_SRC: '{{._SOURCES | replace "\n" " "}}'
      FLAGS: >-
        {{if eq .MODE "debug"}}
        {{.DEBUG_FLAGS}}
        {{else if eq .MODE "release"}}
        {{.RELEASE_FLAGS}}
        {{else}}
        {{fail "MODE must be one of `debug release`"}}
        {{end}}
    cmds:
      - 'cl {{.COMMON_FLAGS}} {{.FLAGS}} -Fe:"{{.OUT_EXE}}" -Fo:"{{.OBJ}}/" {{.IN_SRC}}'
    requires:
      vars: [MODE, OUT_EXE]
    # Seems '{cpp,hpp}' or `[ch]pp` doesn't work with Windows
    sources:
      - '{{.SRC}}/*.cpp'
      - '{{.SRC}}/*.hpp'
    generates:
      - '{{.OUT_EXE}}'
  
  run:
    desc: '[Re]uild the executable if needed then run it.'
    deps:
      - task: build
    cmds:
      - '{{.OUT_EXE}}'
